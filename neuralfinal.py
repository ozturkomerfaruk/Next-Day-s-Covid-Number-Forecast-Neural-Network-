# -*- coding: utf-8 -*-
"""neuralFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ObvVZeqnU9VsXLmplTqOIOktmE9IIQYM

# Amaç

Türkiye'de 31 Mayıs 2022'den itibaren vaka sayılarının yayınlanmıyor. Ben de sonraki günlerin vaka sayılarını tahmin etmek istiyorum.

LSTM kullanarak 1 Haziran 2022 tarihinin vaka sayısını tahmin etmeye çalışacağım.

#Veriseti Hazırlığı
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount("/gdrive")
# %cd /gdrive

#Burada verileri Google Drive hesabımdan çekeceğim. Drive'a excel dosyasında kendim verileri kaydettim.

import pandas as pd
vakaSayilari = pd.read_csv('MyDrive/proje/covid.csv')
vakaSayilari['announce_date'] = pd.to_datetime(vakaSayilari['announce_date'])
vakaSayilari.rename(columns={'No.': 'numberOfCase'}, inplace=True)
vakaSayilari

#pandas kütüphanesi sayesinde Drive'mda bulunan proje klasorunde ki covid excel dosyasına ulaşmakta ve verileri buraya çekmekte. 
#Çekerken de Excel de bulunan No. ismini değiştirmekteyim

#!!!!!!!!!! ÖNEMLİ NOT
#burada verileri başka nasıl kullanacağımı bilmediğimden dolayı Drive'a atmak istedim.
#Ancak kodun çalışması için hocam sizde Drive'ınıza bir klasor açsanız ve path olarak buraya girseniz olur mu?
#Burada otomatikman hangi pc'de giriliyorsa pc sahibinin açık olduğu Gmail hesabına bağlanarak Drive'a giriyor. Onda da doğal olarak proje klasoru bulunmamakta.

vakaSayilari.plot(kind='bar',figsize=(20,8), x='announce_date')
#Excel dosyasında bulunan 1 Ocak 2022 ile 31 Mayıs 2022 tarihleri arasında ki verileri grafikte bastırmak

import numpy as np

covidDataSet = vakaSayilari.drop(['announce_date'], axis=1)

covidDataSet

#Tabloda ki tarihleri çıkartarak eğitmeye başlayacağım.

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0, 1))
covidDataSet_normalized = scaler.fit_transform(covidDataSet)

covidDataSet_normalized

#Scaler ederek bastırıyorum.

"""#Eğitmeye Başlanıyor"""

onceki_veri = 60
sonraki_veri = 1

#Tüm verileri işliyor ancak son 90 günün verisini alarak bir tahmin yapıyor. Burada tüm günleri yazamıyorum. Yani array boyutu kadar onceki veri olsun diyemedim.
#Burada istersem 1 haftalık 1 aylık tahminlerde yapabiliyorum. Ancak amacım sadece 1 Haziran 2022 tarihinin korona sayılarını hesaplamak.

X_train = []
Y_train = []

for i in range(onceki_veri, len(covidDataSet_normalized) - sonraki_veri + 1):
    X_train.append(covidDataSet_normalized[i-onceki_veri:i])
    Y_train.append(covidDataSet_normalized[i:i+sonraki_veri])

X_train = np.array(X_train)
Y_train = np.array(Y_train)

#Elinde olan veriler ile işlenecek veriler burada tanımlandıktan sonra model tanımlanması yapılacak.

from keras.models import Sequential
from keras.layers import Dense, Flatten, LSTM, Dropout
from keras.layers import SpatialDropout1D
from tensorflow.keras import activations

model = Sequential()
model.add(LSTM(units=40, input_shape=(onceki_veri, 1), return_sequences=True, activation="relu"))
model.add(LSTM(units=50, activation="relu"))
model.add(Dense(units=sonraki_veri))
model.compile(loss='mean_squared_error', optimizer='adam')

#Burada model tanımlanması yapılmaktadır. LSTM kullanmak istedim. Birden fazla LSTM kullanarak peşpeşe bağlayarak yapıyorum. 
#Activation Functon olarak Relu yapmak zorunda kaldım çünkü tanh olduğu zaman ya da Leaky Relu olduğu zaman negatif çıkma durumu olabiliyor
#Açıkçası negatif ne şartta çıkıyor bilmiyorum ancak vaka sayısı negatif çıkamayacağına göre Relu kullanmak istedim. Relu da epoch biraz uzun sürüyor tanh'a göre neden bilmiyorum.

epochs = 20
batch_size = 32

history = model.fit(X_train, Y_train, epochs=epochs, batch_size=batch_size,validation_split=0.1)

#batch size ve epoch değerleri girildi.

#mevcut son giriş sırası
X_test = covidDataSet_normalized[- onceki_veri:]
X_test = X_test.reshape(1, onceki_veri, 1)

y_tahmin = model.predict(X_test).reshape(-1, 1)
y_tahmin = scaler.inverse_transform(y_tahmin)

print(X_test.shape)
print(y_tahmin.shape)
print(y_tahmin)
#test ve tahmin değerleri yazıldıktan sonra tabloda gösterilecek

"""## Tabloda Gösterme"""

#tabloda bastırılma yeri
vakaSayilari_gecmisVeriler = vakaSayilari[['announce_date', 'numberOfCase']]
vakaSayilari_gecmisVeriler['announce_date'] = pd.to_datetime(vakaSayilari_gecmisVeriler['announce_date'])
vakaSayilari_gecmisVeriler['Tahmin'] = np.nan
vakaSayilari_gecmisVeriler['Tahmin'].iloc[-1] = vakaSayilari_gecmisVeriler['numberOfCase'].iloc[-1]

vakaSayilari_gelecekVeriler = pd.DataFrame(columns=['announce_date', 'numberOfCase', 'Tahmin'])
vakaSayilari_gelecekVeriler['announce_date'] = pd.date_range(start=vakaSayilari_gecmisVeriler['announce_date'].iloc[-1] + pd.Timedelta(days=1), periods=sonraki_veri)
vakaSayilari_gelecekVeriler['Tahmin'] = y_tahmin.flatten()

tablo = vakaSayilari_gecmisVeriler.append(vakaSayilari_gelecekVeriler).set_index('announce_date')

# başlık
plot = tablo.plot(
    figsize=(14,5),
    title='1 Haziran Vaka Sayısı Tahmini - RNN LSTM'
)

#tahmin değerinin bastırıldığı yer
plot.annotate('%0.2f' % y_tahmin[-1], xy=(1, y_tahmin[-1]), xytext=(10, 0), xycoords=('axes fraction','data'), textcoords='offset points')